package com.cejv539.ebook.actionbeans;

import com.cejv539.ebook.beans.ClientBean;
import com.cejv539.ebook.beans.InvoiceBean;
import com.cejv539.ebook.entities.Invoice;
import java.io.Serializable;
import java.util.List;
import javax.annotation.Resource;
import javax.enterprise.context.SessionScoped;
import javax.inject.Inject;
import javax.inject.Named;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.TypedQuery;
import javax.transaction.UserTransaction;

/**
 *
 * @author Arlyn.Zamudio
 */
@Named
@SessionScoped
public class InvoiceActionBean implements Serializable {

    @Resource
    private UserTransaction userTransaction;

    @PersistenceContext
    private EntityManager entityManager;

    @Inject
    private ClientBean clientBean;

    @Inject
    private InvoiceBean invoiceBean;

    /**
     * get order history of the user/client
     *
     * @return
     */
    public List<Invoice> getOrdersByClient() {

        TypedQuery<Invoice> query;

        query = entityManager.createQuery("SELECT i FROM Invoice i join i.clientID c where c.clientID=?1", Invoice.class);
        query.setParameter(1, clientBean.getClientID());

        List<Invoice> invoice = query.getResultList();
        return invoice;

    }

    /**
     * get order details by Invoice id
     *
     * @return
     */
    public List<Object[]> getOrdersDetailsByID(int invoiceID) {

        TypedQuery<Object[]> query;

        query = entityManager.createQuery("SELECT id.invoiceID, id.price, b.bookID,b.title "
                + "FROM Invoicedetails id inner join id.invoiceID i inner join id.bookID b "
                + "WHERE i.invoiceID=:invoiceID", Object[].class);
        query.setParameter("invoiceID", invoiceID);

        List<Object[]> invoiceDetails = query.getResultList();

        return invoiceDetails;

    }

    /**
     * get order history of the user/client
     *
     * @return
     */
    public List<Invoice> getOrdersByID(int invoiceID) {

        TypedQuery<Invoice> query;

        query = entityManager.createQuery("SELECT i.gst,i.discount,i.subTotal,i.invoiceTotal FROM Invoice i WHERE i.invoiceID=?1", Invoice.class);
        query.setParameter(1, invoiceID);

        List<Invoice> invoice = query.getResultList();
        return invoice;

    }

}
